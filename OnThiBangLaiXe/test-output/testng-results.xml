<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="82" passed="82" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-14T15:21:58 ICT" name="Suite" finished-at="2021-12-14T15:23:01 ICT" duration-ms="63026">
    <groups>
    </groups>
    <test started-at="2021-12-14T15:21:58 ICT" name="TestController" finished-at="2021-12-14T15:23:01 ICT" duration-ms="63026">
      <class name="testController.FindPasswordControllerTest">
        <test-method signature="TC02_sendEmail_Failed()[pri:0, instance:testController.FindPasswordControllerTest@278f8425]" started-at="2021-12-14T15:22:47 ICT" name="TC02_sendEmail_Failed" finished-at="2021-12-14T15:23:01 ICT" duration-ms="13687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_sendEmail_Failed -->
      </class> <!-- testController.FindPasswordControllerTest -->
      <class name="testController.ConnectionTest">
        <test-method signature="CDB_TC001_ConectSuccess(java.lang.String,java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:00 ICT" name="CDB_TC001_ConectSuccess" finished-at="2021-12-14T15:22:00 ICT" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC001_ConectSuccess -->
        <test-method signature="CDB_TC002_ConectFailed(java.lang.String,java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:00 ICT" name="CDB_TC002_ConectFailed" finished-at="2021-12-14T15:22:15 ICT" duration-ms="14645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[The TCP/IP connection to the host :1433, port 1433 has failed. Error: ":1433: invalid IPv6 address. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.".]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: The TCP/IP connection to the host :1433, port 1433 has failed. Error: ":1433: invalid IPv6 address. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.".
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
at com.microsoft.sqlserver.jdbc.SQLServerException.ConvertConnectExceptionToSQLServerException(SQLServerException.java:285)
at com.microsoft.sqlserver.jdbc.SocketFinder.findSocket(IOBuffer.java:2466)
at com.microsoft.sqlserver.jdbc.TDSChannel.open(IOBuffer.java:672)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2747)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC002_ConectFailed(ConnectionTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC002_ConectFailed -->
        <test-method signature="CDB_TC003_ConectFailed(java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:15 ICT" name="CDB_TC003_ConectFailed" finished-at="2021-12-14T15:22:15 ICT" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[Login failed for user ''. ClientConnectionId:d1a39513-3859-4696-86f6-89a2d048ed9b]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: Login failed for user ''. ClientConnectionId:d1a39513-3859-4696-86f6-89a2d048ed9b
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
at com.microsoft.sqlserver.jdbc.TDSTokenHandler.onEOF(tdsparser.java:283)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:129)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:37)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.sendLogon(SQLServerConnection.java:5333)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.logon(SQLServerConnection.java:4066)
at com.microsoft.sqlserver.jdbc.SQLServerConnection$LogonCommand.doExecute(SQLServerConnection.java:4004)
at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2768)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC003_ConectFailed(ConnectionTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC003_ConectFailed -->
        <test-method signature="CDB_TC004_ConectFailed(java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:15 ICT" name="CDB_TC004_ConectFailed" finished-at="2021-12-14T15:22:15 ICT" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[Login failed for user 'abc'. ClientConnectionId:ea9c95b0-4cc7-4a28-a60a-b78fb0c15fc8]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: Login failed for user 'abc'. ClientConnectionId:ea9c95b0-4cc7-4a28-a60a-b78fb0c15fc8
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
at com.microsoft.sqlserver.jdbc.TDSTokenHandler.onEOF(tdsparser.java:283)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:129)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:37)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.sendLogon(SQLServerConnection.java:5333)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.logon(SQLServerConnection.java:4066)
at com.microsoft.sqlserver.jdbc.SQLServerConnection$LogonCommand.doExecute(SQLServerConnection.java:4004)
at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2768)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC004_ConectFailed(ConnectionTest.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC004_ConectFailed -->
        <test-method signature="CDB_TC005_ConectFailed(java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:15 ICT" name="CDB_TC005_ConectFailed" finished-at="2021-12-14T15:22:15 ICT" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[Login failed for user 'sa'. ClientConnectionId:2413e2be-8946-434d-800e-b2f3f231637c]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: Login failed for user 'sa'. ClientConnectionId:2413e2be-8946-434d-800e-b2f3f231637c
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
at com.microsoft.sqlserver.jdbc.TDSTokenHandler.onEOF(tdsparser.java:283)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:129)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:37)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.sendLogon(SQLServerConnection.java:5333)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.logon(SQLServerConnection.java:4066)
at com.microsoft.sqlserver.jdbc.SQLServerConnection$LogonCommand.doExecute(SQLServerConnection.java:4004)
at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2768)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC005_ConectFailed(ConnectionTest.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC005_ConectFailed -->
        <test-method signature="CDB_TC006_ConectFailed(java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:15 ICT" name="CDB_TC006_ConectFailed" finished-at="2021-12-14T15:22:15 ICT" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[Login failed for user 'sa'. ClientConnectionId:b802f8f2-0640-47db-a044-9456f66e50b6]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: Login failed for user 'sa'. ClientConnectionId:b802f8f2-0640-47db-a044-9456f66e50b6
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
at com.microsoft.sqlserver.jdbc.TDSTokenHandler.onEOF(tdsparser.java:283)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:129)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:37)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.sendLogon(SQLServerConnection.java:5333)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.logon(SQLServerConnection.java:4066)
at com.microsoft.sqlserver.jdbc.SQLServerConnection$LogonCommand.doExecute(SQLServerConnection.java:4004)
at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2768)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC006_ConectFailed(ConnectionTest.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC006_ConectFailed -->
        <test-method signature="CDB_TC007_ConectFailed(java.lang.String,java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:15 ICT" name="CDB_TC007_ConectFailed" finished-at="2021-12-14T15:22:15 ICT" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[Cannot open database "a" requested by the login. The login failed. ClientConnectionId:f832e0f1-2abd-4cd7-beff-a3819bc565cc]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: Cannot open database "a" requested by the login. The login failed. ClientConnectionId:f832e0f1-2abd-4cd7-beff-a3819bc565cc
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
at com.microsoft.sqlserver.jdbc.TDSTokenHandler.onEOF(tdsparser.java:283)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:129)
at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:37)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.sendLogon(SQLServerConnection.java:5333)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.logon(SQLServerConnection.java:4066)
at com.microsoft.sqlserver.jdbc.SQLServerConnection$LogonCommand.doExecute(SQLServerConnection.java:4004)
at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2768)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC007_ConectFailed(ConnectionTest.java:103)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC007_ConectFailed -->
        <test-method signature="CDB_TC008_ConectFalse(java.lang.String,java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:15 ICT" name="CDB_TC008_ConectFalse" finished-at="2021-12-14T15:22:15 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[The port number  is not valid.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: The port number  is not valid.
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:1997)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC008_ConectFalse(ConnectionTest.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC008_ConectFalse -->
        <test-method signature="CDB_TC009_ConectFailed(java.lang.String,java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:15 ICT" name="CDB_TC009_ConectFailed" finished-at="2021-12-14T15:22:31 ICT" duration-ms="15770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[The TCP/IP connection to the host haile, port 123 has failed. Error: "Connect timed out. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.".]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: The TCP/IP connection to the host haile, port 123 has failed. Error: "Connect timed out. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.".
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
at com.microsoft.sqlserver.jdbc.SQLServerException.ConvertConnectExceptionToSQLServerException(SQLServerException.java:285)
at com.microsoft.sqlserver.jdbc.SocketFinder.findSocket(IOBuffer.java:2466)
at com.microsoft.sqlserver.jdbc.TDSChannel.open(IOBuffer.java:672)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2747)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC009_ConectFailed(ConnectionTest.java:129)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC009_ConectFailed -->
        <test-method signature="CDB_TC010_ConectFailed(java.lang.String,java.lang.String)[pri:0, instance:testController.ConnectionTest@19835e64]" started-at="2021-12-14T15:22:31 ICT" name="CDB_TC010_ConectFailed" finished-at="2021-12-14T15:22:46 ICT" duration-ms="14851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.sqlserver.jdbc.SQLServerException">
            <message>
              <![CDATA[The TCP/IP connection to the host abc, port 123 has failed. Error: "abc. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.".]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.sqlserver.jdbc.SQLServerException: The TCP/IP connection to the host abc, port 123 has failed. Error: "abc. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.".
at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
at com.microsoft.sqlserver.jdbc.SQLServerException.ConvertConnectExceptionToSQLServerException(SQLServerException.java:285)
at com.microsoft.sqlserver.jdbc.SocketFinder.findSocket(IOBuffer.java:2466)
at com.microsoft.sqlserver.jdbc.TDSChannel.open(IOBuffer.java:672)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectHelper(SQLServerConnection.java:2747)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.login(SQLServerConnection.java:2418)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connectInternal(SQLServerConnection.java:2265)
at com.microsoft.sqlserver.jdbc.SQLServerConnection.connect(SQLServerConnection.java:1291)
at com.microsoft.sqlserver.jdbc.SQLServerDriver.connect(SQLServerDriver.java:881)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:228)
at testController.ConnectionTest.CDB_TC010_ConectFailed(ConnectionTest.java:142)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.sqlserver.jdbc.SQLServerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CDB_TC010_ConectFailed -->
      </class> <!-- testController.ConnectionTest -->
      <class name="testController.LoginControllerTest">
        <test-method is-config="true" signature="init()[pri:0, instance:testController.LoginControllerTest@3f36b447]" started-at="2021-12-14T15:21:58 ICT" name="init" finished-at="2021-12-14T15:21:58 ICT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="TC01_getUserbyEmail_Success(java.lang.String)[pri:0, instance:testController.LoginControllerTest@3f36b447]" started-at="2021-12-14T15:23:01 ICT" name="TC01_getUserbyEmail_Success" finished-at="2021-12-14T15:23:01 ICT" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nhocyeuviai1995@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_getUserbyEmail_Success -->
      </class> <!-- testController.LoginControllerTest -->
      <class name="testController.AddControllerTest">
        <test-method is-config="true" signature="beforePowerMockTestClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:21:58 ICT" name="beforePowerMockTestClass" finished-at="2021-12-14T15:21:58 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method is-config="true" signature="beforePowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:21:58 ICT" name="beforePowerMockTestMethod" finished-at="2021-12-14T15:21:59 ICT" duration-ms="1081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:21:59 ICT" name="beforeClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="adduserTest_TC01_Success(java.lang.String,java.lang.String)[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="adduserTest_TC01_Success" finished-at="2021-12-14T15:22:00 ICT" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nhocyeuviai1995@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adduserTest_TC01_Success -->
        <test-method is-config="true" signature="afterPowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterPowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="beforePowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforePowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method signature="getcodeTest_TC02()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="getcodeTest_TC02" finished-at="2021-12-14T15:22:00 ICT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getcodeTest_TC02 -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforeClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterPowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterPowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method is-config="true" signature="beforePowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforePowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="getcodeTest_TC03()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="getcodeTest_TC03" finished-at="2021-12-14T15:22:00 ICT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getcodeTest_TC03 -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforeClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterPowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterPowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method is-config="true" signature="beforePowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforePowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method signature="getlistuserTest_TC04()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="getlistuserTest_TC04" finished-at="2021-12-14T15:22:00 ICT" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistuserTest_TC04 -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforeClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterPowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterPowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforeClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforePowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="beforePowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method signature="getlistuserTest_TC05()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="getlistuserTest_TC05" finished-at="2021-12-14T15:22:00 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistuserTest_TC05 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterPowerMockTestMethod()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterPowerMockTestMethod" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method is-config="true" signature="afterPowerMockTestClass()[pri:0, instance:testController.AddControllerTest@52c3cb31]" started-at="2021-12-14T15:22:00 ICT" name="afterPowerMockTestClass" finished-at="2021-12-14T15:22:00 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- testController.AddControllerTest -->
      <class name="testController.changePasswordControllerTest">
        <test-method signature="changePasswordController_TC001()[pri:0, instance:testController.changePasswordControllerTest@5b3f3ba0]" started-at="2021-12-14T15:22:47 ICT" name="changePasswordController_TC001" finished-at="2021-12-14T15:22:47 ICT" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changePasswordController_TC001 -->
      </class> <!-- testController.changePasswordControllerTest -->
      <class name="testController.QuestionControllerTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:46 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createExamTest_TC01_Failed()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="createExamTest_TC01_Failed" finished-at="2021-12-14T15:22:47 ICT" duration-ms="23" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Failed 5: create Question_Exam failedjava.lang.Exception: Failed 1: get list Questionjava.lang.NullPointerException: Cannot invoke "java.sql.ResultSet.next()" because "<local4>" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Failed 5: create Question_Exam failedjava.lang.Exception: Failed 1: get list Questionjava.lang.NullPointerException: Cannot invoke "java.sql.ResultSet.next()" because "<local4>" is null
at testController.QuestionController.createExam(QuestionController.java:252)
at testController.QuestionControllerTest.createExamTest_TC01_Failed(QuestionControllerTest.java:66)
at testController.QuestionControllerTest_$$_jvst7c8_0._d3createExamTest_TC01_Failed(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.powermock.modules.testng.internal.PowerMockTestNGMethodHandler.invoke(PowerMockTestNGMethodHandler.java:50)
at testController.QuestionControllerTest_$$_jvst7c8_0.createExamTest_TC01_Failed(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExamTest_TC01_Failed -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createExamTest_TC03_Failed()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="createExamTest_TC03_Failed" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Failed 5: create Question_Exam failedjava.lang.Exception: Failed 1: get list Questionjava.lang.NullPointerException: Cannot invoke "java.sql.ResultSet.next()" because "<local4>" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Failed 5: create Question_Exam failedjava.lang.Exception: Failed 1: get list Questionjava.lang.NullPointerException: Cannot invoke "java.sql.ResultSet.next()" because "<local4>" is null
at testController.QuestionController.createExam(QuestionController.java:252)
at testController.QuestionControllerTest.createExamTest_TC03_Failed(QuestionControllerTest.java:89)
at testController.QuestionControllerTest_$$_jvst7c8_0._d4createExamTest_TC03_Failed(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.powermock.modules.testng.internal.PowerMockTestNGMethodHandler.invoke(PowerMockTestNGMethodHandler.java:50)
at testController.QuestionControllerTest_$$_jvst7c8_0.createExamTest_TC03_Failed(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExamTest_TC03_Failed -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createExamTest_TC04_Failed()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="createExamTest_TC04_Failed" finished-at="2021-12-14T15:22:47 ICT" duration-ms="3" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Failed 5: create Question_Exam failedjava.lang.Exception: Failed 1: get list Questionjava.lang.NullPointerException: Cannot invoke "java.sql.ResultSet.next()" because "<local4>" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Failed 5: create Question_Exam failedjava.lang.Exception: Failed 1: get list Questionjava.lang.NullPointerException: Cannot invoke "java.sql.ResultSet.next()" because "<local4>" is null
at testController.QuestionController.createExam(QuestionController.java:252)
at testController.QuestionControllerTest.createExamTest_TC04_Failed(QuestionControllerTest.java:100)
at testController.QuestionControllerTest_$$_jvst7c8_0._d5createExamTest_TC04_Failed(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.powermock.modules.testng.internal.PowerMockTestNGMethodHandler.invoke(PowerMockTestNGMethodHandler.java:50)
at testController.QuestionControllerTest_$$_jvst7c8_0.createExamTest_TC04_Failed(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExamTest_TC04_Failed -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteQuestionTest_TC05_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="deleteQuestionTest_TC05_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteQuestionTest_TC05_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteQuestionTest_TC06_Failed()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="deleteQuestionTest_TC06_Failed" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteQuestionTest_TC06_Failed -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteQuestionTest_TC07_Failed()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="deleteQuestionTest_TC07_Failed" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteQuestionTest_TC07_Failed -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getAnswerCauLietTest_T10_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerCauLietTest_T10_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerCauLietTest_T10_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getAnswerCauLietTest_TC09_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerCauLietTest_TC09_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerCauLietTest_TC09_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getAnswerCauLietTest_TC11_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerCauLietTest_TC11_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerCauLietTest_TC11_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getAnswerKhaiNiemTest_TC12_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerKhaiNiemTest_TC12_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerKhaiNiemTest_TC12_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getAnswerKhaiNiemTest_TC13_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerKhaiNiemTest_TC13_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerKhaiNiemTest_TC13_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getAnswerKhaiNiemTest_TC14_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerKhaiNiemTest_TC14_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerKhaiNiemTest_TC14_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getAnswerSaHinhTest_TC15_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerSaHinhTest_TC15_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerSaHinhTest_TC15_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getAnswerSaHinhTest_TC16_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerSaHinhTest_TC16_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerSaHinhTest_TC16_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getAnswerSaHinhTest_TC17_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getAnswerSaHinhTest_TC17_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAnswerSaHinhTest_TC17_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCauHoiDTbyDeThiIDTest_TC18_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getCauHoiDTbyDeThiIDTest_TC18_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCauHoiDTbyDeThiIDTest_TC18_NoResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCauHoiDTbyDeThiIDTest_TC19_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getCauHoiDTbyDeThiIDTest_TC19_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCauHoiDTbyDeThiIDTest_TC19_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCauHoiDTbyDeThiIDTest_TC20_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getCauHoiDTbyDeThiIDTest_TC20_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <exception class="org.powermock.reflect.exceptions.TooManyMethodsFoundException">
            <message>
              <![CDATA[Several matching methods found, please specify the argument parameter types so that PowerMock can determine which method you're referring to.
Matching methods in class testController.QuestionController$MockitoMock$101011985 were:
void createExam( testModel.Dethi.class )
testModel.Answer getAnswer( java.sql.ResultSet.class )
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.powermock.reflect.exceptions.TooManyMethodsFoundException: Several matching methods found, please specify the argument parameter types so that PowerMock can determine which method you're referring to.
Matching methods in class testController.QuestionController$MockitoMock$101011985 were:
void createExam( testModel.Dethi.class )
testModel.Answer getAnswer( java.sql.ResultSet.class )

at org.powermock.reflect.internal.WhiteboxImpl.throwExceptionWhenMultipleMethodMatchesFound(WhiteboxImpl.java:1689)
at org.powermock.reflect.internal.WhiteboxImpl.findMethodOrThrowException(WhiteboxImpl.java:901)
at org.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:822)
at org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:655)
at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:380)
at org.powermock.api.mockito.PowerMockito.when(PowerMockito.java:390)
at testController.QuestionControllerTest.getCauHoiDTbyDeThiIDTest_TC20_NoResult(QuestionControllerTest.java:237)
at testController.QuestionControllerTest_$$_jvst7c8_0._d22getCauHoiDTbyDeThiIDTest_TC20_NoResult(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.powermock.modules.testng.internal.PowerMockTestNGMethodHandler.invoke(PowerMockTestNGMethodHandler.java:50)
at testController.QuestionControllerTest_$$_jvst7c8_0.getCauHoiDTbyDeThiIDTest_TC20_NoResult(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.powermock.reflect.exceptions.TooManyMethodsFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCauHoiDTbyDeThiIDTest_TC20_NoResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCauLietTest_TC21_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getCauLietTest_TC21_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCauLietTest_TC21_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCauLietTest_TC22_ListEmty()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getCauLietTest_TC22_ListEmty" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCauLietTest_TC22_ListEmty -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getCauLietTest_TC23_NoReult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getCauLietTest_TC23_NoReult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCauLietTest_TC23_NoReult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getKhaiNiemTest_TC24_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getKhaiNiemTest_TC24_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getKhaiNiemTest_TC24_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getKhaiNiemTest_TC25_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getKhaiNiemTest_TC25_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getKhaiNiemTest_TC25_NoResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getListAllDTbyEmailTest_TC26_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAllDTbyEmailTest_TC26_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAllDTbyEmailTest_TC26_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAllDTbyEmailTest_TC27_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAllDTbyEmailTest_TC27_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAllDTbyEmailTest_TC27_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAllDTbyEmailTest_TC28_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAllDTbyEmailTest_TC28_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAllDTbyEmailTest_TC28_NoResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAnswersTest_TC29_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAnswersTest_TC29_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAnswersTest_TC29_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAnswersTest_TC30_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAnswersTest_TC30_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAnswersTest_TC30_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAnswersTest_TC31_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAnswersTest_TC31_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAnswersTest_TC31_NoResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAnswersbyQuesstionIDTest_TC32_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAnswersbyQuesstionIDTest_TC32_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAnswersbyQuesstionIDTest_TC32_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAnswersbyQuesstionIDTest_TC33_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAnswersbyQuesstionIDTest_TC33_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAnswersbyQuesstionIDTest_TC33_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListAnswersbyQuesstionIDTest_TC34_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListAnswersbyQuesstionIDTest_TC34_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListAnswersbyQuesstionIDTest_TC34_NoResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getListQuestionTest_TC38_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListQuestionTest_TC38_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListQuestionTest_TC38_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getListQuestionTest_TC39_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListQuestionTest_TC39_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListQuestionTest_TC39_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getListQuestionTest_TC40_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getListQuestionTest_TC40_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListQuestionTest_TC40_NoResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getSaHinhTest_TC41_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getSaHinhTest_TC41_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSaHinhTest_TC41_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getSaHinhTest_TC42_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getSaHinhTest_TC42_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSaHinhTest_TC42_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getSaHinhTest_TC43_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getSaHinhTest_TC43_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSaHinhTest_TC43_NoResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getlistLoaiCauHoiTest_TC43_NoResult()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getlistLoaiCauHoiTest_TC43_NoResult" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistLoaiCauHoiTest_TC43_NoResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getlistLoaiCauHoiTest_TC44_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getlistLoaiCauHoiTest_TC44_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistLoaiCauHoiTest_TC44_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getlistLoaiCauHoiTest_TC45_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="getlistLoaiCauHoiTest_TC45_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistLoaiCauHoiTest_TC45_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="insertDapAnTest_TC46_NullParam()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertDapAnTest_TC46_NullParam" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertDapAnTest_TC46_NullParam -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="insertDapAnTest_TC47_NullGiaiThich()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertDapAnTest_TC47_NullGiaiThich" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertDapAnTest_TC47_NullGiaiThich -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="insertDapAnTest_TC48_NullNoiDung()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertDapAnTest_TC48_NullNoiDung" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertDapAnTest_TC48_NullNoiDung -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="insertDapAnTest_TC48_NullParam()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertDapAnTest_TC48_NullParam" finished-at="2021-12-14T15:22:47 ICT" duration-ms="3" status="PASS">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
at testController.QuestionController.insertDapAn(QuestionController.java:450)
at testController.QuestionControllerTest.insertDapAnTest_TC48_NullParam(QuestionControllerTest.java:565)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertDapAnTest_TC48_NullParam -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="insertDapAnTest_TC49_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertDapAnTest_TC49_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertDapAnTest_TC49_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="insertQuestionTest_TC50_EmptyQuestion()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertQuestionTest_TC50_EmptyQuestion" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
at testController.QuestionController.insertQuestion(QuestionController.java:439)
at testController.QuestionControllerTest.insertQuestionTest_TC50_EmptyQuestion(QuestionControllerTest.java:582)
at testController.QuestionControllerTest_$$_jvst7c8_0._d54insertQuestionTest_TC50_EmptyQuestion(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.powermock.modules.testng.internal.PowerMockTestNGMethodHandler.invoke(PowerMockTestNGMethodHandler.java:50)
at testController.QuestionControllerTest_$$_jvst7c8_0.insertQuestionTest_TC50_EmptyQuestion(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertQuestionTest_TC50_EmptyQuestion -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="insertQuestionTest_TC51_NullQuestion()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertQuestionTest_TC51_NullQuestion" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertQuestionTest_TC51_NullQuestion -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="insertQuestionTest_TC52_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="insertQuestionTest_TC52_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertQuestionTest_TC52_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateDapAnTest_TC53_Nullparam()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateDapAnTest_TC53_Nullparam" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
at testController.QuestionController.updateDapAn(QuestionController.java:461)
at testController.QuestionControllerTest.updateDapAnTest_TC53_Nullparam(QuestionControllerTest.java:602)
at testController.QuestionControllerTest_$$_jvst7c8_0._d60updateDapAnTest_TC53_Nullparam(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.powermock.modules.testng.internal.PowerMockTestNGMethodHandler.invoke(PowerMockTestNGMethodHandler.java:50)
at testController.QuestionControllerTest_$$_jvst7c8_0.updateDapAnTest_TC53_Nullparam(QuestionControllerTest_$$_jvst7c8_0.java)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDapAnTest_TC53_Nullparam -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateDapAnTest_TC54_Failed()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateDapAnTest_TC54_Failed" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDapAnTest_TC54_Failed -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateDapAnTest_TC55_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateDapAnTest_TC55_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDapAnTest_TC55_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateDapAnTest_TC56_NullID()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateDapAnTest_TC56_NullID" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDapAnTest_TC56_NullID -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateExambyIDTest_TC57_EmptyDethi()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateExambyIDTest_TC57_EmptyDethi" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExambyIDTest_TC57_EmptyDethi -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateExambyIDTest_TC58_EmptyEmail()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateExambyIDTest_TC58_EmptyEmail" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExambyIDTest_TC58_EmptyEmail -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="updateExambyIDTest_TC58_NullEmail()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateExambyIDTest_TC58_NullEmail" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExambyIDTest_TC58_NullEmail -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateExambyIDTest_TC59_NullDeThi()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateExambyIDTest_TC59_NullDeThi" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Failed update Exam]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Failed update Exam
at testController.QuestionController.updateExambyID(QuestionController.java:368)
at testController.QuestionControllerTest.updateExambyIDTest_TC59_NullDeThi(QuestionControllerTest.java:658)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExambyIDTest_TC59_NullDeThi -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateExambyIDTest_TC60_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateExambyIDTest_TC60_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExambyIDTest_TC60_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateQuesstionTest_61_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateQuesstionTest_61_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateQuesstionTest_61_Success -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateQuesstionTest_62_EmptyQuestion()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateQuesstionTest_62_EmptyQuestion" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateQuesstionTest_62_EmptyQuestion -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateQuesstionTest_62_NullQuestion()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateQuesstionTest_62_NullQuestion" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
at testController.QuestionController.updateQuesstion(QuestionController.java:426)
at testController.QuestionControllerTest.updateQuesstionTest_62_NullQuestion(QuestionControllerTest.java:690)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateQuesstionTest_62_NullQuestion -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="updateQuestionExamTest_TC63_Success()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateQuestionExamTest_TC63_Success" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateQuestionExamTest_TC63_Success -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="updateQuestionExamTest_TC64_Empty()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateQuestionExamTest_TC64_Empty" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateQuestionExamTest_TC64_Empty -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="beforeMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="updateQuestionExamTest_TC64_Null()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="updateQuestionExamTest_TC64_Null" finished-at="2021-12-14T15:22:47 ICT" duration-ms="2" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Failed update Question Exam]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Failed update Question Exam
at testController.QuestionController.updateQuestionExam(QuestionController.java:379)
at testController.QuestionControllerTest.updateQuestionExamTest_TC64_Null(QuestionControllerTest.java:707)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateQuestionExamTest_TC64_Null -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testController.QuestionControllerTest_$$_jvst7c8_0@3703bf3c]" started-at="2021-12-14T15:22:47 ICT" name="afterMethod" finished-at="2021-12-14T15:22:47 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testController.QuestionControllerTest -->
    </test> <!-- TestController -->
  </suite> <!-- Suite -->
</testng-results>
