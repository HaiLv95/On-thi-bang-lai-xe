package testView;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import testController.QuestionController;
import testModel.LoaiCauHoi;
import testModel.LoaiDeThi;
import testModel.Question;

/**
 *
 * @author hai95
 */
public class dgQuestionList extends java.awt.Dialog {

    /**
     * Creates new form dgQuestionList
     */
    QuestionController questionController = new QuestionController();
    List<Question> lst_Questions;
    List<Question> lst_Qs = new ArrayList<>();
    List<LoaiCauHoi> lst_Questiontype;
    DefaultTableModel model;
    int index, type;
    public static dgQuestionList dgQsList;

    public dgQuestionList(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dgQsList = this;
        model = (DefaultTableModel) tblQuesstion.getModel();
        setstart();
    }

    //set các thuộc tính khi run start
    public void setstart() {
        setSize(1200, 800);
        setLocationRelativeTo(null);
        try {

            loadQuestionTypetoCbo();
            loadbyType();
            if (!Run.user.getRoles().equalsIgnoreCase("admin")) {
                btnThem.setVisible(false);
                btnXoa.setVisible(false);
                btnSua.setVisible(false);
            }
            if (tblQuesstion.getRowCount() > 0) {
                index = 0;
            } else {
                index = -1;
            }
            tblQuesstion.setRowSelectionInterval(index, index);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Get list question failed");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblQuesstionTypes = new javax.swing.JLabel();
        cboQuesstionTypes = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuesstion = new javax.swing.JTable();
        lblMess = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(78, 180, 84));
        jPanel4.setLayout(null);

        lblQuesstionTypes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQuesstionTypes.setForeground(new java.awt.Color(255, 255, 255));
        lblQuesstionTypes.setText("Loại câu hỏi");
        jPanel4.add(lblQuesstionTypes);
        lblQuesstionTypes.setBounds(20, 10, 140, 30);

        cboQuesstionTypes.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboQuesstionTypes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboQuesstionTypesActionPerformed(evt);
            }
        });
        jPanel4.add(cboQuesstionTypes);
        cboQuesstionTypes.setBounds(180, 10, 250, 30);

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });
        jPanel4.add(txtSearch);
        txtSearch.setBounds(930, 10, 250, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tìm Kiếm");
        jPanel4.add(jLabel1);
        jLabel1.setBounds(820, 10, 100, 30);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(0, 30, 1200, 50);

        tblQuesstion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nội dung", "Hình", "Loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQuesstion.setRowHeight(20);
        tblQuesstion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQuesstionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQuesstion);
        if (tblQuesstion.getColumnModel().getColumnCount() > 0) {
            tblQuesstion.getColumnModel().getColumn(0).setMinWidth(80);
            tblQuesstion.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblQuesstion.getColumnModel().getColumn(0).setMaxWidth(80);
            tblQuesstion.getColumnModel().getColumn(2).setMinWidth(80);
            tblQuesstion.getColumnModel().getColumn(2).setPreferredWidth(80);
            tblQuesstion.getColumnModel().getColumn(2).setMaxWidth(80);
            tblQuesstion.getColumnModel().getColumn(3).setMinWidth(180);
            tblQuesstion.getColumnModel().getColumn(3).setPreferredWidth(180);
            tblQuesstion.getColumnModel().getColumn(3).setMaxWidth(180);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 160, 1130, 610);

        lblMess.setForeground(new java.awt.Color(255, 0, 0));
        lblMess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(lblMess);
        lblMess.setBounds(800, 90, 250, 14);

        btnThem.setBackground(new java.awt.Color(0, 182, 222));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.setBorderPainted(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);
        btnThem.setBounds(790, 100, 100, 30);

        btnSua.setBackground(new java.awt.Color(248, 205, 54));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Chi tiết");
        btnSua.setBorderPainted(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);
        btnSua.setBounds(920, 100, 100, 30);

        btnXoa.setBackground(new java.awt.Color(255, 118, 89));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.setBorderPainted(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);
        btnXoa.setBounds(1060, 100, 100, 30);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 1200, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void cboQuesstionTypesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboQuesstionTypesActionPerformed
        // TODO add your handling code here:
        type = cboQuesstionTypes.getSelectedIndex();
        loadbyType();
    }//GEN-LAST:event_cboQuesstionTypesActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here:
        char text = evt.getKeyChar();
        if (!Character.isDigit(text)) {
            lblMess.setText("Bạn chỉ có thể nhập mã câu hỏi là số để tìm kiếm");
            evt.consume();
        } else {
            lblMess.setText("");
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        cboQuesstionTypes.setSelectedIndex(0);
        addQuestion();
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        int id = Integer.parseInt(txtSearch.getText().trim());
        searchByID(id);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        cboQuesstionTypes.setSelectedIndex(0);
        updateQs();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblQuesstionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuesstionMouseClicked
        // TODO add your handling code here:
        setMouseClickTable();
    }//GEN-LAST:event_tblQuesstionMouseClicked
    // load list loại câu hỏi lên combobox
    public void loadQuestionTypetoCbo() {
        try {
            lst_Questiontype = questionController.getlistLoaiCauHoi();
            cboQuesstionTypes.removeAll();
            cboQuesstionTypes.addItem("All");
            for (LoaiCauHoi loaiCauHoi : lst_Questiontype) {
                cboQuesstionTypes.addItem(loaiCauHoi.getTenLoai());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed get question type to dialog");
        }
    }

    // load list câu hỏi lên bảng
    public void fillQuestionToTable(List<Question> lst_Qs) {
        String tenLoai = "";
        for (Question lst_Q : lst_Qs) {
            for (LoaiCauHoi loaiCauHoi : lst_Questiontype) {
                if (lst_Q.getLoaiCauHoi_id() == loaiCauHoi.getID()) {
                    tenLoai = loaiCauHoi.getTenLoai();
                    model.addRow(new Object[]{lst_Q.getId(), lst_Q.getNoiDung(), lst_Q.getHinh(), tenLoai});
                }
            }
        }

    }

    //set mouse click table
    public void setMouseClickTable() {
        if (tblQuesstion.getRowCount() > 0) {
            index = tblQuesstion.getSelectedRow();
        } else {
            index = -1;
        }
        if (!Run.user.getRoles().equalsIgnoreCase("admin")) {
            cboQuesstionTypes.setSelectedIndex(0);
            updateQs();
        }
    }

    //load câu hỏi theo loại
    public void loadbyType() {
        try {
            lst_Questions = questionController.getListQuestion();
            txtSearch.setText("");
            model.setRowCount(0);
            lst_Qs.clear();
            if (type == 0) {
                for (Question lst_Question : lst_Questions) {
                    lst_Qs.add(lst_Question);
                }
            } else if (type == 2) {
                lst_Qs = questionController.getSaHinh(lst_Questions);
            } else if (type == 1) {
                lst_Qs = questionController.getKhaiNiem(lst_Questions);
            } else if (type == 3) {
                lst_Qs = questionController.getCauLiet(lst_Questions);
            }
            fillQuestionToTable(lst_Qs);
            tblQuesstion.setRowSelectionInterval(index, index);
            jPanel1.updateUI();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed fill question by type to table" + ex);
//            ex.printStackTrace();

        }
    }

    //tìm câu hỏi theo id
    public void searchByID(int id) {
        model.setRowCount(0);
        lst_Qs.clear();
        if (txtSearch.getText().trim().isEmpty()) {
            cboQuesstionTypes.setSelectedIndex(0);
            loadbyType();
        } else {
            for (Question lst_Question : lst_Questions) {
                if (lst_Question.getId() == id) {
                    lst_Qs.add(lst_Question);
                }
            }
        }
        fillQuestionToTable(lst_Qs);
    }

    //thêm câu hoi
    public void addQuestion() {
        Question question = new Question();
        dgAddQuestion addQuestion = new dgAddQuestion(Run.home, true, question, 0);
        dgQsList.setVisible(false);
        dgQsList.dispose();
        addQuestion.setVisible(true);
    }

    // cập nhật câu hỏi
    public void updateQs() {
        Question question = lst_Qs.get(index);
        question.setTrangThai(true);
        dgAddQuestion addQuestion = new dgAddQuestion(Run.home, true, question, 1);
        dgQsList.setVisible(false);
        dgQsList.dispose();
        addQuestion.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboQuesstionTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMess;
    private javax.swing.JLabel lblQuesstionTypes;
    private javax.swing.JTable tblQuesstion;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
